name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run tests
      run: go test -v ./...

    - name: Run go vet
      run: go vet ./...

    - name: Test build
      run: |
        # 测试构建主要平台的二进制文件
        echo "Testing Linux amd64 build..."
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o nspass-agent-linux-amd64 ./cmd/nspass-agent
        
        echo "Testing Linux arm64 build..."
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o nspass-agent-linux-arm64 ./cmd/nspass-agent
        
        echo "Testing Darwin amd64 build..."
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o nspass-agent-darwin-amd64 ./cmd/nspass-agent
        
        echo "Testing Windows amd64 build..."
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o nspass-agent-windows-amd64.exe ./cmd/nspass-agent
        
        echo "All builds successful!"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m 