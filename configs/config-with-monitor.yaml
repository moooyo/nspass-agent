# NSPass Agent 配置示例 - 包含代理进程监控配置

# API通信配置
api:
  base_url: "https://api.nspass.example.com"
  token: "your-api-token-here"
  timeout: 30
  retry_count: 3
  retry_delay: 5

# 代理软件配置
proxy:
  bin_path: "/usr/local/bin"
  config_path: "/etc/nspass/proxy"
  enabled_types:
    - "shadowsocks"
    - "trojan"
    - "snell"
  auto_start: true
  restart_on_fail: true

  # 进程监控配置
  monitor:
    # 是否启用代理进程监控
    enable: true
    
    # 健康检查间隔（秒）
    # 每隔30秒检查一次所有代理进程状态
    check_interval: 30
    
    # 重启冷却时间（秒）
    # 代理重启后需要等待60秒才能再次重启
    restart_cooldown: 60
    
    # 最大重启次数（每小时）
    # 每小时最多自动重启10次，超过则停止自动重启
    max_restarts: 10
    
    # 健康检查超时（秒）
    # 如果检查代理状态超过5秒无响应，则认为异常
    health_timeout: 5

# IPTables防火墙配置
iptables:
  enable: true
  chain_prefix: "NSPASS_"
  backup_path: "/etc/nspass/iptables/backup"

# 日志配置
logger:
  level: "info"
  format: "json"
  output: "both"
  file: "/var/log/nspass/agent.log"
  max_size: 100
  max_backups: 5
  max_age: 30
  compress: true

# 更新间隔配置
update_interval: 300  # API同步间隔（秒）

---
# 开发环境监控配置示例
# 开发环境可以使用更频繁的检查和更宽松的重启策略
proxy:
  monitor:
    enable: true
    check_interval: 10      # 10秒检查一次
    restart_cooldown: 30    # 30秒冷却
    max_restarts: 20        # 每小时最多20次
    health_timeout: 3       # 3秒超时

---
# 生产环境监控配置示例
# 生产环境使用更保守的监控策略
proxy:
  monitor:
    enable: true
    check_interval: 60      # 60秒检查一次
    restart_cooldown: 120   # 120秒冷却
    max_restarts: 5         # 每小时最多5次
    health_timeout: 10      # 10秒超时

---
# 高可用环境监控配置示例
# 高可用环境需要快速检测和恢复
proxy:
  monitor:
    enable: true
    check_interval: 15      # 15秒检查一次
    restart_cooldown: 45    # 45秒冷却
    max_restarts: 15        # 每小时最多15次
    health_timeout: 5       # 5秒超时

---
# 禁用监控示例
# 在某些场景下可能需要禁用自动监控
proxy:
  monitor:
    enable: false
    # 其他配置在禁用时不生效 