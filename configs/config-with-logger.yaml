# NSPass Agent 配置示例 - 包含完整的日志配置

# API通信配置
api:
  base_url: "https://api.nspass.example.com"
  token: "your-api-token-here"
  timeout: 30
  retry_count: 3
  retry_delay: 5

# 代理软件配置
proxy:
  bin_path: "/usr/local/bin"
  config_path: "/etc/nspass/proxy"
  enabled_types:
    - "shadowsocks"
    - "trojan"
    - "snell"
  auto_start: true
  restart_on_fail: true

# IPTables防火墙配置
iptables:
  enable: true
  chain_prefix: "NSPASS_"
  backup_path: "/etc/nspass/iptables/backup"

# 日志配置 - 详细说明
logger:
  # 日志级别: debug, info, warn, error
  # debug: 显示所有日志，包括详细的调试信息
  # info: 显示一般信息和错误（推荐生产环境）
  # warn: 只显示警告和错误
  # error: 只显示错误信息
  level: "info"
  
  # 日志格式: json, text
  # json: 结构化JSON格式，便于日志分析系统处理
  # text: 人类可读的文本格式，便于直接查看
  format: "json"
  
  # 输出方式: stdout, file, both
  # stdout: 输出到标准输出（终端）
  # file: 输出到文件
  # both: 同时输出到终端和文件
  output: "both"
  
  # 日志文件路径（当output为file或both时使用）
  file: "/var/log/nspass/agent.log"
  
  # 单个日志文件最大大小(MB)
  # 当文件达到此大小时会自动轮转
  max_size: 100
  
  # 保留的旧日志文件数量
  # 超过此数量的旧文件会被删除
  max_backups: 5
  
  # 日志文件保留天数
  # 超过此天数的文件会被删除
  max_age: 30
  
  # 是否压缩旧日志文件
  # 启用可节省磁盘空间
  compress: true

# 更新间隔配置
update_interval: 300  # API同步间隔（秒）

# 开发环境配置示例
---
# 开发环境可以使用更详细的日志
logger:
  level: "debug"
  format: "text"
  output: "stdout"

# 生产环境配置示例  
---
# 生产环境建议配置
logger:
  level: "info"
  format: "json"
  output: "file"
  file: "/var/log/nspass/agent.log"
  max_size: 50
  max_backups: 10
  max_age: 7
  compress: true

# 高性能环境配置示例
---
# 高性能环境（减少日志开销）
logger:
  level: "warn"
  format: "json"
  output: "file"
  file: "/var/log/nspass/agent.log"
  max_size: 20
  max_backups: 3
  max_age: 3
  compress: true 